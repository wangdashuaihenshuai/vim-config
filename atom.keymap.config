# Your keymp
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to flements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson
'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  'shift-l': 'vim-mode-plus:move-to-last-character-of-line'
  'shift-h': 'vim-mode-plus:move-to-beginning-of-line'
  'cmd-d': 'pane:split-right'
  'enter': 'multi-cursor:expandDown'
  'space': 'hyperclick:confirm-cursor'

'atom-text-editor.vim-mode-plus.normal-mode':
  'cmd-left': 'pane:show-previous-item'
  'cmd-right': 'pane:show-next-item'
  'ctrl-j': 'window:focus-pane-below'
  'ctrl-k': 'window:focus-pane-above'
  'ctrl-h': 'window:focus-pane-on-left'
  'ctrl-l': 'window:focus-pane-on-right'
  'f': 'easy-motion-redux:words'
  'ctrl-f': 'easy-motion-redux:words_starting'

'body':
  'ctrl-o': 'tree-view:toggle-focus'

'.tree-view':
  'o': 'tree-view:expand-directory'
  'x': 'tree-view:collapse-directory'

